# Generated by Django 4.2 on 2023-05-19 21:19

from django.db import migrations

indicators = {
    1 : {
        'name': 'Yield Curve',
        'series_id':'DGS10',
        'indicator_description': '10-year yield estimated from the average yields of a variety of Treasury securities with different maturities derived from the Treasury yield curve.'
        },
    2 : {
        'name': 'Effective Federal Funds Rate',
        'series_id': 'EFFR',
        'indicator_description': 'Effective Federal Funds Rate, or the interest rate depository institutions charge each other for overnight loans of funds.'
        },
    3 : {
        'name': 'S&P/Case-Shiller U.S. National Home Price Index',
        'series_id': 'CSUSHPINSA',
        'indicator_description': 'Data of a benchmark of average single-family home prices in the U.S., calculated monthly based on changes in home prices over the prior three months.'
        },
    4 : {
        'name': 'Unemployment Rate',
        'series_id':'UNRATE',
        'indicator_description': 'The unemployment rate, or the number of people 16 and over actively searching for a job as a percentage of the total labor force.'
        },
    5 : {
        'name': 'Consumer Price Index for All Urban Consumers: All Items in U.S. City Average',
        'series_id':'CPIAUCSL',
        'indicator_description': 'Data of the CPI, or an inflation measure derived from tracking the changes in the weighted-average price of a basket of common goods and services.'
        },
    6 : {
        'name': 'personal_consumption',
        'series_id':'PCE',
        'indicator_description': ''
        },
    7 : {
        'name': 'jolts_opening',
        'series_id': 'JTSJOL',
        'indicator_description': ''
        },
    8 : {
        'name': 'jolts_hires',
        'series_id':'JTSHIR',
        'indicator_description': ''
        },
    9 : {
        'name': 'jolts_turnover',
        'series_id': 'JTSTSR',
        'indicator_description': ''
        },
    10 : {
        'name': 'personal_savings',
        'series_id': 'PSAVERT',
        'indicator_description': ''
    },
    11 : {
        'name': 'consumer_confidence',
        'series_id': 'CSCICP03USM665S',
        'indicator_description': ''
    }
}

def add_indicator_data(apps, schema_editor):
    # We can't import the Person model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    IndicatorReference = apps.get_model("indicators", "IndicatorReference")
    for person in Person.objects.all():
        person.name = f"{person.first_name} {person.last_name}"
        person.save()

class Migration(migrations.Migration):

    dependencies = [
        ('indicators', '0002_alter_indicator_created_at_and_more'),
    ]

    operations = [
    ]
